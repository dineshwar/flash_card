// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int      @id @default(autoincrement())
  username          String   @unique
  email             String   @unique
  fullName          String?
  profilePictureUrl String?
  role              String   @default("user")
  status            String   @default("active")
  passwordHash      String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  // Relations
  Desk  Desk[]
  Token Token[]
}

model Token {
  id       Int      @id @default(autoincrement())
  userId   Int
  user     User     @relation(fields: [userId], references: [id])
  token    String
  expiryAt DateTime
}

model Desk {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  // Relations
  userId      Int
  user        User        @relation(fields: [userId], references: [id])
  flashcards  Flashcard[]
}

model Flashcard {
  id        Int      @id @default(autoincrement())
  question  String
  answer    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  deskId Int
  desk   Desk @relation(fields: [deskId], references: [id])
}
